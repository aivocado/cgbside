---
title: "1109_HongJu"
author: "HongJu Lee"
date: "2023-11-20"
categories: [analysis]
image: "db.jpeg"
---

# 법률 데이터 느낀점 정리

# 실무 데이터를 보며 느낀점

## 1. 도메인 지식의 중요성

→ 법률 관련 지식이 거의 없다 보니 전달받은 데이터를 확인했을 때 법조문의 분류 체계 및 소관 부서들의 역할들을 잘 몰라 데이터의 구조를 이해하는데 시간이 오래 걸렸다. 

ex) 법령 이름과 조문 제목의 차이들에 대해 잘 몰라서 이를 어떻게 구분하는지, provision_key_no 에 들어가 있는 조, 항, 호, 목을 구분하는 방법 등에서 어려움을 겪었다.

![법조문 분류 표](table.png)

## 2. 문자열 데이터 전처리의 어려움

→ 데이터를 열어보니 총 60,964개의 법조문이 존재했다. 조, 항을 제외한 나머지 열들이 모두 str 타입이기 때문에 문자열을 어떻게 전처리 할지가 중요하다고 생각했다. 

내가 생각한 전처리 방식은 다음과 같았다. 먼저 열 별로 unique 처리해서 줄일 수 있는 라벨로 변경할 수 있는 열이 무엇이 있는지 확인해 봤다. 처리 결과는 다음과 같았다.

```python
ministrys = main_df['소관부처'].unique()
laws = main_df['법령'].unique()
names = main_df['조문제목'].unique()
work_name = main_df['사무명'].unique()
types = main_df['사무유형'].unique()
note = main_df['비고(사무수행주체, 권한위임위탁 근거규정 등 입력)'].unique()

print(f"소관부서: {len(ministrys)}개")
print(f"법령: {len(laws)}개")
print(f"조문제목: {len(names)}개")
print(f"사무명: {len(work_name)}개")
print(f"사무유형: {len(types)}개")
print(f"비고: {len(note)}개")
```

(결과)

![](first.png)

띄어쓰기 처리전 변수별 unique 개수

![](second.png)

띄어쓰기 처리 후 변수별 unique 개수

 확인 결과가 이상해서 데이터를 유심히 살펴봤다. 내가 전달받은 사무 유형은 총 16가지였는데 33가지가 나왔기 때문에 더 유심히 데이터를 살펴본 결과 띄어쓰기와 오탈자 등의 문제가 있었다. 따라서 이러한 것들을 EDA 과정에서 찾아내 적절한 범주로 묶고 라벨 인코딩을 진행해야겠다는 생각을 하게 되었다. 추가적으로 사뭇 명은 겹치는 것이 별로 없기 때문에 이 변수를 군집화할지, 자연어 생성 모델을 이용할지 고민해 봐야겠다는 생각을 했다.

